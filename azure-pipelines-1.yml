# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: Default

variables:
  webAppName: 'rajniloadtestwebapp'
  serviceConnection: 'loadtestconnection'
  azureSubscriptionId: '65b18607-dce1-44aa-9b79-59bac7fa0357'
  loadTestResource: ''
  loadTestResourceGroup: ''
  location: 'EAST US'


stages:
- stage: LoadTest
  displayName: Load Test
  dependsOn: Deploy
  condition: succeeded()
  jobs:
  - job: LoadTest
    displayName: Load Test
    pool:
      vmImage: ubuntu-latest
    steps:
    
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: $(serviceConnection)
        subscriptionId: $(azureSubscriptionId)
        action: 'Create Or Update Resource Group'
        resourceGroupName: $(loadTestResourceGroup)
        location: '$(location)'
        templateLocation: 'Linked artifact'
        csmFile: '$(System.DefaultWorkingDirectory)/ARMTemplate/template.json'
        csmParametersFile: '$(System.DefaultWorkingDirectory)/ARMTemplate/parameters.json'
        overrideParameters: '-name $(loadTestResource) -location "$(location)"'
        deploymentMode: 'Incremental'    
    
    - task: AzureLoadTest@1
      inputs:
        azureSubscription: $(serviceConnection)
        loadTestConfigFile: 'SampleApp.yaml'
        resourceGroup: $(loadTestResourceGroup)
        loadTestResource: $(loadTestResource)
        env: |
          [
            {
            "name": "webapp",
            "value": "$(webAppName).azurewebsites.net"
            }
          ]
          
    - publish: $(System.DefaultWorkingDirectory)/loadTest
      artifact: results